{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmg51\\\\Desktop\\\\summer_2024\\\\github_projects\\\\Quote_Keeper\\\\frontend\\\\src\\\\pages\\\\MyQuotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\nimport { api_base } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyQuotesPage = () => {\n  _s();\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  const [quotes, setQuotes] = useState([]);\n  const getQuotes = async () => {\n    try {\n      const response = await axios.get(`${api_base}quotes/`, {\n        headers: {\n          Authorization: `Bearer ${authTokens.access}`\n        }\n      });\n      setQuotes(response.data);\n      console.log(quotes);\n    } catch {\n      console.error(\"failed to fetch quotes\");\n    }\n  };\n  useEffect(() => {\n    getQuotes();\n  }, [authTokens]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"my-quotes-div\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Quotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)\n\n  // render out the user's quotes, authenticated request\n  ;\n};\n_s(MyQuotesPage, \"lgUNuyTpPvK/CS7MFGfNcVl97/Y=\");\n_c = MyQuotesPage;\nexport default MyQuotesPage;\nvar _c;\n$RefreshReg$(_c, \"MyQuotesPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","axios","AuthContext","api_base","jsxDEV","_jsxDEV","MyQuotesPage","_s","authTokens","quotes","setQuotes","getQuotes","response","get","headers","Authorization","access","data","console","log","error","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gmg51/Desktop/summer_2024/github_projects/Quote_Keeper/frontend/src/pages/MyQuotesPage.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\nimport axios from 'axios';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { api_base } from '../constants'; \r\n\r\nconst MyQuotesPage = () => {\r\n\r\n    const { authTokens } = useContext(AuthContext)\r\n    const [quotes, setQuotes] = useState([])\r\n\r\n    const getQuotes = async () => {\r\n        try {\r\n            const response = await axios.get(`${api_base}quotes/`, {\r\n                headers : {\r\n                    Authorization: `Bearer ${authTokens.access}`\r\n                }\r\n            })\r\n            setQuotes(response.data)\r\n            console.log(quotes)\r\n        } catch {\r\n            console.error(\"failed to fetch quotes\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuotes()\r\n    }, [authTokens])\r\n\r\n    return (\r\n        <div id=\"my-quotes-div\">\r\n            <h1>My Quotes</h1>\r\n        </div>\r\n\r\n        // render out the user's quotes, authenticated request\r\n    )\r\n}\r\n\r\nexport default MyQuotesPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM;IAAEC;EAAW,CAAC,GAAGV,UAAU,CAACI,WAAW,CAAC;EAC9C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGV,QAAQ,SAAS,EAAE;QACnDW,OAAO,EAAG;UACNC,aAAa,EAAE,UAAUP,UAAU,CAACQ,MAAM;QAC9C;MACJ,CAAC,CAAC;MACFN,SAAS,CAACE,QAAQ,CAACK,IAAI,CAAC;MACxBC,OAAO,CAACC,GAAG,CAACV,MAAM,CAAC;IACvB,CAAC,CAAC,MAAM;MACJS,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,oBACIH,OAAA;IAAKgB,EAAE,EAAC,eAAe;IAAAC,QAAA,eACnBjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB;;EAEL;EAAA;AAER,CAAC;AAAAnB,EAAA,CA9BKD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAgClB,eAAeA,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}